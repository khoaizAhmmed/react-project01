{"version":3,"sources":["component/timer/btn.module.css","component/profile/bio.jsx","component/profile/skills.jsx","component/profile/links.jsx","component/profile/profile.jsx","component/table/table.jsx","component/timer/timer.jsx","component/form/inputs.jsx","component/input/input.jsx","component/form/form.jsx","component/form/index.jsx","component/signup/inputs.jsx","component/signup/form.jsx","component/signup/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Bio","props","className","name","Skills","s1","s2","children","Links","href","Component","Table","Timer","state","count","countM","buttonDisable","intervalId","increment","setState","clearInterval","decrement","start","setInterval","alert","stop","reset","value10","value30","value60","onClick","this","classes","bt10","btn","style","backgroundColor","Inputs","htmlFor","label","type","placeholder","id","value","onChange","defaultProps","Form","onSubmit","handleSubmit","values","handleChange","email","password","error","errors","birthday","initValues","gender","Signup","agreement","e","target","handleAgree","checked","preventDefault","validate","isValid","createUser","Object","keys","length","React","App","users","CreateUser","user","Date","getTime","toString","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.44a67304.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bt10\":\"btn_bt10__3mENa\"};","import React from 'react'\r\n\r\nconst Bio = (props) => (\r\n\r\n    <div className='Bio'>\r\n        <h3>{props.name}</h3>\r\n        <p>Font-End javascript developer</p>\r\n    </div>\r\n);\r\nexport default Bio;","import React from 'react'\r\n\r\nconst Skills = (props) => (\r\n    <div className='Skills'>\r\n        <h3>Skills:</h3>\r\n        <ul>\r\n            <li>{props.s1}</li>\r\n            <li>{props.s2}</li>\r\n            {/* <li>{props.s3}</li>\r\n            <li>{props.s4}</li> */}\r\n            {props.children}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Skills;","import React from 'react'\r\nconst Links = () => (\r\n    <div className='Links'>\r\n        <h3>Social Links:</h3>\r\n        <ul>\r\n            <li><a href=\"#\">Facebook</a></li>\r\n            <li><a href=\"#\">Twiter</a></li>\r\n            <li><a href=\"#\">Github</a></li>\r\n            <li><a href=\"#\">Instagram</a></li>\r\n        </ul>\r\n    </div>\r\n)\r\nexport default Links;","import React, { Component } from 'react';\r\nimport './profile.css'\r\nimport Bio from './bio'\r\nimport Skills from './skills'\r\nimport Links from './links'\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Bio name={this.props.bioname}/>\r\n                <Skills s1={this.props.s1} s2={this.props.s2} s3={this.props.s3} s4={this.props.s4}/>\r\n                <Links/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nfunction Table(){\r\n    return(\r\n        <div>\r\n            <table>\r\n  <tr>\r\n    <th>Firstname</th>\r\n    <th>Lastname</th>\r\n    <th>Age</th>\r\n  </tr>\r\n  <tr>\r\n    <td>Jill</td>\r\n    <td>Smith</td>\r\n    <td>50</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Eve</td>\r\n    <td>Jackson</td>\r\n    <td>94</td>\r\n  </tr>\r\n</table>\r\n        </div>\r\n    )\r\n}\r\nexport default Table;","import React ,{Component} from 'react'\r\nimport './timer.css'\r\nimport classes from './btn.module.css'\r\nclass Timer extends Component{\r\n\r\n    state = {\r\n        count:0,\r\n        countM:0,\r\n        buttonDisable:false\r\n    }\r\n    intervalId= null\r\n    increment= ()=>{\r\n        if(this.state.count<59){\r\n            this.setState(\r\n                {count : this.state.count +1}\r\n             )\r\n        }else{\r\n              this.setState(\r\n                  {countM:this.state.countM +1},()=>{\r\n                    this.setState(\r\n                        {count:0}\r\n                    )\r\n                    clearInterval(this.intervalId);\r\n                    this.intervalId=  null;\r\n                  }\r\n              )\r\n        }\r\n    }\r\n    decrement= ()=>{\r\n        \r\n          if( this.state.count > 0  ){\r\n            this.setState(\r\n            {count : this.state.count -1},()=>{\r\n                if(this.state.countM > this.state.count){\r\n                    this.setState(\r\n                        {count:59},()=>{\r\n                            this.setState(\r\n                                {countM : this.state.countM-1}\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            \r\n            )\r\n          }\r\n    }\r\n    start=()=>{\r\n            if(this.state.count>0 && !this.intervalId || this.state.countM>0){\r\n                this.intervalId = setInterval(()=>{\r\n                    this.setState(\r\n                    {count:this.state.count -1,\r\n                    buttonDisable:true},()=>{\r\n                        if(this.state.countM > this.state.count){\r\n                            this.setState(\r\n                                {count:59},()=>{\r\n                                    if(this.state.countM>0){\r\n                                    this.setState(\r\n                                        {countM : this.state.countM-1}\r\n                                    )}\r\n                                }\r\n                            )\r\n                        }if(this.state.count===0 && this.state.countM===0 ){\r\n                            alert('Timer Finished....')\r\n                            clearInterval(this.intervalId);\r\n                            this.intervalId= null\r\n                        }\r\n                    }\r\n                    )\r\n                },1000)\r\n            \r\n            }\r\n    }\r\n    stop=()=>{\r\n        if(this.intervalId){\r\n            clearInterval(this.intervalId);\r\n            this.intervalId = null;\r\n        }\r\n\r\n    }\r\n    reset=()=>{\r\n        this.setState(\r\n            {count:0 ,countM:0}\r\n        )\r\n        clearInterval(this.intervalId);\r\n        this.intervalId=  null;\r\n    }\r\n    value10 =()=>{\r\n        if(this.state.buttonDisable===false){\r\n        this.setState(\r\n            {count :this.state.count = 10}\r\n        )\r\n        }\r\n    }\r\n    value30 =()=>{\r\n        if(this.state.buttonDisable===false){\r\n            this.setState(\r\n                {count :this.state.count = 30}\r\n            )\r\n            }\r\n    }\r\n    value60 =()=>{\r\n        if(this.state.buttonDisable===false){\r\n            this.setState(\r\n                {count :this.state.count = 60}\r\n            )\r\n            }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <h3 className='p-1' > Stopwatch</h3>\r\n                <div >\r\n                    <button onClick={this.value10} className={classes.bt10}>10</button> \r\n                    <button onClick={this.value30} className='btnn btn30' >30</button> \r\n                    <button onClick={this.value60} className='btnn btn60' >60</button> \r\n                </div>\r\n                <div className='time'>\r\n                    <button onClick={this.decrement} className={classes.btn} className='btnn btnHM'>-</button>\r\n        <span className=\"text\" >{this.state.countM}:{this.state.count}</span>\r\n                    <button onClick={this.increment} className='btnn btnHP'>+</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.start} style={{backgroundColor:'#3498DB'}} className='btnn'>Start</button>\r\n                    <button onClick={this.stop} style={{backgroundColor:'#F44336'}} className='btnn'>Stop</button>\r\n                    <button onClick={this.reset} className='btnn'>reset</button>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Timer;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Inputs = props => (\r\n    <div className='form-group' >\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <input\r\n            className='form-control'\r\n            name={props.name}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            id={props.name}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n        />\r\n    </div>\r\n)\r\n\r\nInputs.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\nInputs.defaultProps = {\r\n    type: 'text',\r\n    label: '',\r\n    placeholder: ''\r\n}\r\n\r\nexport default Inputs ;","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass Input extends Component {\r\n\r\n    state = {\r\n        fName: '',\r\n        lName: '',\r\n        bio: '',\r\n        country: '',\r\n        date: '',\r\n        gender: '',\r\n        agree: false,\r\n        skills: []\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        console.log(this.state)\r\n    }\r\n    handleCheck = (e) => {\r\n        this.setState({\r\n            agree: e.target.checked\r\n        })\r\n    }\r\n    handleSkills = (e) => {\r\n        if (e.target.checked) {\r\n            this.setState({\r\n                skills: [...this.state.skills, e.target.value]\r\n            })\r\n        } else {\r\n            const skills = this.state.skills.filter(skill => skill !== e.target.value)\r\n            this.setState({ skills })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { fName, lName, bio, country, date, agree, skills } = this.state\r\n        return (\r\n            <div className='form-group p-5' >\r\n                <input className='form-control m-2' type=\"text\" placeholder='First Name' value={fName} name='fName' onChange={this.handleChange} />\r\n                <input className='form-control m-2' type=\"text\" placeholder='Last Name' value={lName} name='lName' onChange={this.handleChange} />\r\n                <textarea className='form-control m-2' name=\"\" id=\"\" cols=\"\" rows=\"2\" value={bio} name='bio' onChange={this.handleChange} ></textarea>\r\n                <select className='form-control m-2' value={country} name=\"country\" id=\"\" onChange={this.handleChange} >\r\n                    <option value=\"\">Select Country</option>\r\n                    <option value=\"Bangladesh\">Bangladesh</option>\r\n                    <option value=\"India\">India</option>\r\n                    <option value=\"China\">China</option>\r\n                    <option value=\"Japan\">Japan</option>\r\n                </select>\r\n                <input className='form-control m-2' type=\"date\" value={date} name='date' onChange={this.handleChange} />\r\n                <div className='text-left m-2' >\r\n                    <h5>Gender</h5>\r\n                    <div className='form-check'>\r\n                        <input className='form-check-input' name='gender' value='male' type=\"radio\" onChange={this.handleChange} />\r\n                        <label className='form-check-label' htmlFor=\"\">Male</label>\r\n                    </div>\r\n                    <div className='form-check'>\r\n                        <input className='form-check-input' name='gender' value='female' type=\"radio\" onChange={this.handleChange} />\r\n                        <label className='form-check-label' htmlFor=\"\">female</label>\r\n                    </div>\r\n                    <div className='form-check'>\r\n                        <input className='form-check-input' name='gender' value='other' type=\"radio\" onChange={this.handleChange} />\r\n                        <label className='form-check-label' htmlFor=\"\">other</label>\r\n                    </div>\r\n                </div>\r\n                <div className='form-check text-left m-2' >\r\n                    <input className='form-check-input' type=\"checkbox\" id='chek' name='agree' checked={agree} onChange={this.handleCheck} />\r\n                    <label className='form-check-label' htmlFor=\"chek\">I agree all condition</label>\r\n                </div>\r\n                <h5>Skills</h5>\r\n                <div>\r\n                    <div className='form-check text-left m-2' >\r\n                        <input className='form-check-input' type=\"checkbox\" name='skills' value='Java' checked={skills.includes('Java')} onChange={this.handleSkills} />\r\n                        <label className='form-check-label'>Java</label>\r\n                    </div>\r\n                    <div>\r\n                        <div className='form-check text-left m-2' >\r\n                            <input className='form-check-input' type=\"checkbox\" name='skills' value='Python' checked={skills.includes('Python')} onChange={this.handleSkills} />\r\n                            <label className='form-check-label'>Python</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className='btn btn-primary' onClick={this.handleClick} >Submit</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Inputs from './inputs'\r\n\r\nconst Form = props => (\r\n    <form className='p-5' onSubmit={props.handleSubmit}  >\r\n        <Inputs\r\n            label='Enter name'\r\n            name='name'\r\n            placeholder='Your name'\r\n            value={props.values.name}\r\n            onChange={props.handleChange}\r\n        />\r\n        <Inputs\r\n            label='Enter email'\r\n            name='email'\r\n            type='email'\r\n            placeholder='example@test.com'\r\n            value={props.values.email}\r\n            onChange={props.handleChange}\r\n        />\r\n        <Inputs\r\n            label='Enter password'\r\n            name='password'\r\n            type='password'\r\n            placeholder='*******'\r\n            value={props.values.password}\r\n            onChange={props.handleChange}\r\n        />\r\n        <button type='submit' className='btn btn-primary' >Submit</button>\r\n    </form>  \r\n);\r\n\r\nForm.propTypes = {\r\n    values : PropTypes.object.isRequired,\r\nhandleChange: PropTypes.func.isRequired,\r\nhandleSubmit : PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form ","import React, { Component } from 'react'\r\nimport Form from './form'\r\n\r\n\r\n\r\nclass MainForm extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        e.target.reset()\r\n        this.setState({\r\n            name: '', email: '', password: ''\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <Form\r\n                    values={this.state}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainForm;","import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Inputs = props=>(\r\n    <div className='form-group' >\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <input\r\n            className={props.error ? 'form-control is-invalid' : 'form-control'}\r\n            name={props.name}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            id={props.name}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n        />\r\n        {props.error && <div className='invalid-feedback' >{props.error}</div> }\r\n    </div>\r\n)\r\nInputs.propTypes ={\r\n    name:propTypes.string.isRequired,\r\n    type:propTypes.string.isRequired,\r\n    error:propTypes.string.isRequired,\r\n    placeholder:propTypes.string.isRequired,\r\n    id:propTypes.string.isRequired,\r\n    value:propTypes.string.isRequired,\r\n    onChange:propTypes.func.isRequired,\r\n}\r\n\r\nInputs.defaultProps = {\r\n    type: 'text',\r\n    label: '',\r\n    placeholder: ''\r\n}\r\nexport default Inputs","import React from 'react'\r\nimport Inputs from './inputs'\r\nimport propTypes from 'prop-types'\r\nconst Form =({values,handleChange,handleSubmit,errors})=>{\r\n    return(\r\n        <div>\r\n        <form className='p-5' onSubmit={handleSubmit} >\r\n                <Inputs\r\n                    name='name'\r\n                    label='Enter name'\r\n                    placeholder='Your name'\r\n                    value={values.name}\r\n                    error={errors.name}\r\n                    onChange={handleChange}\r\n                />\r\n                <Inputs\r\n                    name='email'\r\n                    label='Enter email'\r\n                    placeholder='Your email'\r\n                    type='email'\r\n                    value={values.email}\r\n                    error={errors.email}\r\n                    onChange={handleChange}\r\n                />\r\n                <Inputs\r\n                    name='password'\r\n                    label='Enter password'\r\n                    type='password'\r\n                    placeholder='*******'\r\n                    value={values.password}\r\n                    error={errors.password}\r\n                    onChange={handleChange}\r\n                />\r\n                <Inputs\r\n                    name='birthday'\r\n                    label='Enter birthday'\r\n                    type='date'\r\n                    value={values.birthday}\r\n                    error={errors.birthday}\r\n                    onChange={handleChange}\r\n                />\r\n                <button type='submit' className='btn btn-primary' >Submit</button>\r\n\r\n            </form>        \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nForm.propTypes={\r\n    values:propTypes.object.isRequired,\r\n    errors:propTypes.object.isRequired,\r\n    handleChange:propTypes.func.isRequired,\r\n    handleSubmit:propTypes.func.isRequired\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport Form from './form'\r\nimport propTypes from 'prop-types'\r\nconst initValues = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    birthday: '',\r\n    gender: ''\r\n}\r\nclass Signup extends React.Component {\r\n    state = {\r\n        values: { initValues },\r\n        agreement: false,\r\n        errors:{}\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n    handleAgree = (e) => {\r\n        this.setState({\r\n            agreement: e.target.checked\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { isValid, errors } = this.validate()\r\n\r\n        if (isValid) {\r\n           this.props.createUser(this.state.values)\r\n            e.target.reset()\r\n            this.setState({\r\n                values: initValues, agreement: false,errors:{}\r\n            })\r\n        } else {\r\n            this.setState({errors})\r\n        }\r\n    }\r\n\r\n    validate = () => {\r\n        const errors = {}\r\n        const { values: { name, email, password, birthday } } = this.state\r\n        if (!name) {\r\n            errors.name = 'Please Provide Your Name'\r\n        }\r\n        if (!email) {\r\n            errors.email = 'Please Provide Your Name'\r\n        }\r\n        if (!password) {\r\n            errors.password = 'Please Provide Your Name'\r\n        }\r\n        if (!birthday) {\r\n            errors.birthday = 'Please Provide Your Name'\r\n        }\r\n        return {\r\n            errors,\r\n            isValid: Object.keys(errors).length === 0\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    values={this.state.values}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    errors={this.state.errors}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSignup.propTypes={\r\n    createUser:propTypes.func.isRequired\r\n}\r\nexport default Signup ","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './App.css';\nimport Profile from './component/profile/profile'\nimport Table from './component/table/table'\nimport Bio from './component/profile/bio'\nimport Skills from './component/profile/skills'\nimport Timer from './component/timer/timer'\nimport Input from './component/input/input'\nimport MainForm from './component/form/index'\nimport Signup from './component/signup/index'\nimport Links from './component/profile/links';\n\nclass App extends React.Component{\n\n    state={\n      users:[]\n    }\n\n    CreateUser=(user)=>{\n      user.id = new Date().getTime().toString()\n      this.setState({\n        users:[...this.state.users,user]\n      })\n    }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {/* <Profile bioname={this.khoaiz.name} s1={this.khoaiz.s1} s2={this.khoaiz.s2} s3={this.khoaiz.s3} s4={this.khoaiz.s4}/> */}\n        {/* <Profile bioname='khoaiz' s1='HTML'/> */}\n        <Timer/>\n        {/* <Input/> */}\n        {/* <MainForm/> */}\n        <h3 className='mt-4 mx-5' >Registration Form</h3>\n        <Signup\n        createUser={this.CreateUser}\n        />\n        \n          <div className='mx-5 pb-2' >\n            <h4 >\n              All Register User\n            </h4>\n            <ul className='list-group'>\n      {this.state.users.map(user=>(<li className=\"list-group-item\">{user.name}{' : '}{user.email}</li>))}\n            </ul>\n\n          </div>\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}